name: Continuous integration

on:
  push:
    branches:
      - v2
  pull_request:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'To run with tmate enter "debug_enabled"'
        required: false
        default: "false"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
        id: go

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2

      - name: Validate go-mod is up-to-date and license headers
        run: make validate

      - name: Run golangci-lint
        env:
          BUILD_TAGS: e2e
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b /usr/bin/ v1.39.0
          make -f builder.Makefile lint

  # only on main branch, costs too much for the gain on every PR
  validate-cross-build:
    name: Validate cross build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      GO111MODULE: "on"
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
        id: go

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}

      # Ensure we don't discover cross platform build issues at release time.
      # Time used to build linux here is gained back in the build for local E2E step
      - name: Build packages
        run: make -f builder.Makefile cross

  build-plugin:
    name: Build and tests in plugin mode
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
        id: go

      - name: Setup docker CLI
        run: |
          curl https://download.docker.com/linux/static/stable/x86_64/docker-20.10.3.tgz | tar xz
          sudo cp ./docker/docker /usr/bin/ && rm -rf docker && docker version

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}

      - name: Test
        run: make -f builder.Makefile test

      - name: Build for local E2E
        env:
          BUILD_TAGS: e2e
        run: make GIT_TAG=e2e-PR-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }} -f builder.Makefile compose-plugin

      - name: E2E Test in plugin mode
        run: make e2e-compose

  build-standalone:
    name: Build and tests in standalone mode
    runs-on: ubuntu-latest
    env:
      GO111MODULE: "on"
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
        id: go

      - name: Setup docker CLI
        run: |
          curl https://download.docker.com/linux/static/stable/x86_64/docker-20.10.3.tgz | tar xz
          sudo cp ./docker/docker /usr/bin/ && rm -rf docker && docker version

      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: go-${{ hashFiles('**/go.sum') }}

      - name: Build for local E2E
        env:
          BUILD_TAGS: e2e
        run: make GIT_TAG=e2e-PR-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }} -f builder.Makefile compose-plugin

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}


      - name: E2E Test in standalone mode
        run: make e2e-compose-standalone
